{"version":3,"sources":["TipButton.js","CusButton.js","images/icon-person.svg","Results.js","Calc.js","App.js","index.js"],"names":["TipButton","props","state","selected","tipVal","handleClick","bind","evt","this","val","className","style","backgroundColor","color","onClick","Component","CusButton","cusVal","handleChange","e","setState","target","name","value","onChange","placeholder","type","Results","tipTotal","personTotal","tipPerc","billTotal","numPeople","toFixed","totalTip","parseInt","getTipAmt","getTotalAmt","reset","Calc","renderButtons","checkSelected","resetForm","id","classList","add","labels","children","remove","tipAmts","map","tip","check","htmlFor","src","Person","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.028656e2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './TipButton.css'\n\nclass TipButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { selected: false, tipVal: 5 }\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(evt) {\n        this.props.handleClick(evt, this.props.val);\n    }\n    render() {\n        return (\n            <div className={this.props.val === \"Custom\" ? \"t-button cus\" : \"t-button reg\"}\n                style={this.props.selected ? { backgroundColor: \"hsl(172, 67%, 45%)\", color: \"hsl(183, 100%, 15%)\" } : null}\n                onClick={this.handleClick}\n            >\n                {this.props.val}%\n            </div>\n        )\n    }\n}\n\nexport default TipButton;","import React, { Component } from 'react'\nimport './TipButton.css';\n\nclass CusButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { cusVal: '' }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n        this.props.handleClick(e, e.target.value)\n    }\n    render() {\n        return (\n            <div className=\"cus\">\n                <input\n                    style={this.props.selected ? { backgroundColor: \"hsl(172, 67%, 45%)\", color: \"hsl(183, 100%, 15%)\" } : null}\n                    name=\"cusVal\"\n                    onChange={this.handleChange}\n                    value={this.state.cusVal}\n                    placeholder=\"Custom\"\n                    type=\"number\" />\n            </div>\n        )\n    }\n}\n\nexport default CusButton;","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React, { Component } from 'react'\nimport './Results.css';\n\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { tipTotal: 0, personTotal: 0 }\n    }\n    getTipAmt() {\n        let { tipPerc, billTotal, numPeople } = this.props;\n        let tip = (tipPerc / 100).toFixed(2);\n        let totalTip = (billTotal * tip).toFixed(2);\n        let tipPerPerson = (totalTip / numPeople).toFixed(2);\n        return tipPerPerson;\n    }\n    getTotalAmt() {\n        let { tipPerc, billTotal, numPeople } = this.props;\n        let tip = (tipPerc / 100).toFixed(2);\n        let totalTip = (billTotal * tip).toFixed(2);\n        let totPerPerson = ((parseInt(billTotal) + parseInt(totalTip)) / numPeople).toFixed(2);\n        return totPerPerson;\n    }\n    render() {\n        return (\n            <div className=\"bg result-grid\">\n                <div className=\"a\">\n                    <h3>Tip Amount</h3>\n                    <p>/ person</p>\n                </div>\n                <div className=\"b\">\n                    <h3>Total</h3>\n                    <p>/ person</p>\n                </div>\n                <h2 className=\"c no-top\">${this.getTipAmt()}</h2>\n                <h2 className=\"d no-top\">${this.getTotalAmt()}</h2>\n                <button onClick={this.props.reset} className=\"e\">RESET</button>\n            </div>\n        )\n    }\n}\n\nexport default Results;","import React, { Component } from 'react'\nimport './Calc.css';\nimport TipButton from './TipButton';\nimport CusButton from './CusButton';\nimport Person from './images/icon-person.svg'\nimport Results from './Results';\n\nclass Calc extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { billTotal: 0, tipPerc: 5, numPeople: 1 }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.renderButtons = this.renderButtons.bind(this);\n        this.checkSelected = this.checkSelected.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n        if (e.target.id === 'people') {\n            if (e.target.value <= 0) {\n                e.target.classList.add('brown-outline');\n                e.target.labels[0].children[0].classList.add('show');\n            } else {\n                e.target.labels[0].children[0].classList.remove('show');\n                e.target.classList.remove('brown-outline');\n            }\n        }\n    }\n    handleClick(e, val) {\n        this.setState({ tipPerc: val });\n    }\n    renderButtons() {\n        return (\n            this.props.tipAmts.map((tip) => (\n                <TipButton\n                    val={tip}\n                    key={tip}\n                    handleClick={this.handleClick}\n                    selected={tip === this.state.tipPerc ? true : false}\n                />\n            ))\n        )\n    }\n    checkSelected() {\n        let check = true;\n        for (let n of this.props.tipAmts) {\n            if (n === this.state.tipPerc) {\n                check = false;\n            }\n        }\n        if (check) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    resetForm() {\n        this.setState({ billTotal: 0, tipPerc: 5, numPeople: 1 });\n    }\n    render() {\n        return (\n            <div className=\"center\">\n                <div className=\"main-container\">\n                    <div className=\"f-width\">\n                        <div className=\"center form-input\">\n                            <label htmlFor=\"bill\">Bill</label>\n                            <span className=\"icon\">$</span>\n                            <input\n                                onChange={this.handleChange}\n                                name=\"billTotal\"\n                                type=\"number\"\n                                id=\"bill\"\n                                value={this.state.billTotal} />\n                        </div>\n                        <div className=\"form-input\">\n                            <h2>Select Tip %</h2>\n                            <div className=\"tip-grid\">\n                                {this.renderButtons()}\n                                <CusButton\n                                    handleClick={this.handleClick}\n                                    selected={this.checkSelected() ? true : false}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"center form-input\">\n                            <label htmlFor=\"people\">Number of People<span className=\"zero-text\">Can't be zero</span></label>\n                            <img src={Person} alt=\"person-icon\" className=\"icon p\" />\n                            <input\n                                onChange={this.handleChange}\n                                name=\"numPeople\"\n                                id=\"people\"\n                                type=\"number\"\n                                value={this.state.numPeople}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"make-row\">\n                        <div className=\"center form-input\">\n                            <Results\n                                billTotal={this.state.billTotal}\n                                tipPerc={this.state.tipPerc}\n                                numPeople={this.state.numPeople}\n                                reset={this.resetForm}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Calc;","import './App.css';\nimport Calc from './Calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>SPLITTER</h1>\n      <Calc tipAmts={[5, 10, 15, 25, 50]} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}